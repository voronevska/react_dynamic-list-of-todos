{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","status","query","onStatusChange","onQueryChange","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onModalClose","userId","useState","user","setUser","useEffect","getUser","fetchUser","href","email","name","App","setTodos","setSelectedTodo","areTodosLoaded","setAreTodosLoaded","setStatus","setQuery","visibleTodos","filter","toLowerCase","includes","fetchTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52f75b70.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n        const isSelected = id === selectedTodo?.id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({ 'has-background-info-light': isSelected })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !isSelected,\n                    'fa-eye-slash': isSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\nimport { Statuses } from '../../types/Statuses';\n\ninterface Props {\n  status: string;\n  query: string;\n  onStatusChange: (status: Statuses) => void;\n  onQueryChange: (query: string) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  status,\n  query,\n  onStatusChange,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onStatusChange(event.target.value as Statuses)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  onModalClose: () => void;\n}\n\nexport const TodoModal: FC<Props> = ({ todo, onModalClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then((fetchUser: User) => {\n        setUser(fetchUser);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { FC, useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Statuses } from './types/Statuses';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [areTodosLoaded, setAreTodosLoaded] = useState<boolean>(false);\n  const [status, setStatus] = useState<Statuses>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const filteredTodos = todos.filter(({ title }) => (\n    title\n      .toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n\n  const visibleTodos = filteredTodos.filter(({ completed }) => {\n    switch (status) {\n      case 'active':\n        return !completed;\n\n      case 'completed':\n        return completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then((fetchTodos: Todo[]) => {\n        setTodos(fetchTodos);\n        setAreTodosLoaded(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                query={query}\n                onStatusChange={setStatus}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!areTodosLoaded && <Loader />}\n\n              {areTodosLoaded && (\n                visibleTodos.length > 0\n                  ? (\n                    <TodoList\n                      todos={visibleTodos}\n                      selectedTodo={selectedTodo}\n                      onSelectedTodo={setSelectedTodo}\n                    />\n                  )\n                  : (\n                    <p>\n                      No data with this words...\n                    </p>\n                  )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onModalClose={handleModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}